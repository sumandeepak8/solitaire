{"version":3,"sources":["Card.js","App.js","Div.js","serviceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rank","symbol","className","color","onDragStart","drag","bind","assertThisInitialized","event","dataTransfer","setData","target","id","concat","react_default","a","createElement","draggable","Component","App","putCardsOnStock","deck","i","index","Math","floor","random","length","stocksCards","push","splice","spade","heart","club","diamond","foundationCards","firstFoundationPile","secondFoundationPile","thirdFoundationPile","fourthFoundationPile","wasteCards","tableauPiles","allowDrop","drop","dropOnWaste","PutOnWaste","putBackOnStocks","dropOnFoundationPiles","setState","preventDefault","document","getElementById","lastChild","pop","updateStocksAndWaste","parentNode","split","cardRank","targetRank","droppableCardId","targetElementId","cardDetails","cardColor","targetDetails","isDifferentColors","isOfLowRank","getData","appendChild","isValidToDrop","elementToPlace","cardSuit","upperCard","targetSuit","isOfHighRank","hasWon","values","forEach","cards","alert","targetId","isValidToDropOnFoundationPile","card","onDragOver","onDrop","symbolAndColor","_this$getSymbolAndCol","getSymbolAndColor","king","Card_Card","queen","jack","createSuit","onClick","class","getStocksDiv","getUndoDiv","getWastesDiv","createFoundation","getUpperLeftDiv","getUpperRightDiv","cardsForEachPile","Array","j","randomIndex","cardToAdd","tablePile","getTablePile","createDeck","createTableauPiles","bottomDiv","getBottomDiv","upperDiv","getUpperDiv","_this$getBoard","getBoard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a076114.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rank: props.rank,\n      symbol: props.symbol,\n      className: props.className,\n      color: props.color,\n      onDragStart: props.drag\n    };\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(event) {\n    event.dataTransfer.setData('text', event.target.id);\n  }\n\n  render() {\n    let className = this.state.className;\n    let rank = this.state.rank;\n    let color = this.state.color;\n    let id = `${rank} ${color} ${className}`;\n    return (\n      <div\n        className={className}\n        onDragStart={this.drag}\n        id={id}\n        draggable={true}\n      >\n        <div className=\"upperPartOfCard\">{rank}</div>\n        <div className=\"symbol\">{this.state.symbol}</div>\n        <div className=\"lowerPartOfCard\">{rank}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './Card';\nimport Div from './Div';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spade: props.spade,\n      heart: props.heart,\n      club: props.club,\n      diamond: props.diamond,\n      deck: [],\n      stocksCards: [],\n      foundationCards: {\n        firstFoundationPile: [],\n        secondFoundationPile: [],\n        thirdFoundationPile: [],\n        fourthFoundationPile: []\n      },\n      wasteCards: [],\n      tableauPiles: []\n    };\n    this.allowDrop = this.allowDrop.bind(this);\n    this.drop = this.drop.bind(this);\n    this.dropOnWaste = this.dropOnWaste.bind(this);\n    this.PutOnWaste = this.PutOnWaste.bind(this);\n    this.putBackOnStocks = this.putBackOnStocks.bind(this);\n    this.dropOnFoundationPiles = this.dropOnFoundationPiles.bind(this);\n  }\n\n  updateStocksAndWaste() {\n    this.setState({\n      stocksCards: this.state.stocksCards,\n      wasteCards: this.state.wasteCards\n    });\n  }\n\n  putBackOnStocks(event) {\n    event.preventDefault();\n    let upperCard = document.getElementById('waste').lastChild;\n    if (upperCard != null) {\n      this.state.stocksCards.push(this.state.wasteCards.pop());\n      this.updateStocksAndWaste();\n    }\n  }\n\n  PutOnWaste(event) {\n    event.preventDefault();\n    let length = event.target.parentNode.id.split(' ').length;\n    if (length == 3) {\n      this.state.wasteCards.push(this.state.stocksCards.pop());\n      this.updateStocksAndWaste();\n    }\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  isOfHighRank(cardRank, targetRank) {\n    if (\n      (cardRank == 'tableau' && targetRank == 'K') ||\n      (cardRank == 'K' && targetRank == 'Q') ||\n      (cardRank == 'Q' && targetRank == 'J') ||\n      (cardRank == 'J' && targetRank == '10') ||\n      +cardRank == +targetRank + 1\n    )\n      return true;\n    return false;\n  }\n\n  isOfLowRank(cardRank, targetRank) {\n    if (\n      (targetRank == 'tableau' && cardRank == 'K') ||\n      (targetRank == 'K' && cardRank == 'Q') ||\n      (targetRank == 'Q' && cardRank == 'J') ||\n      (targetRank == 'J' && cardRank == '10') ||\n      +cardRank == +targetRank - 1\n    )\n      return true;\n    return false;\n  }\n\n  isValidToDrop(droppableCardId, targetElementId) {\n    let cardDetails = droppableCardId.split(' ');\n    let cardRank = cardDetails[0];\n    let cardColor = cardDetails[1];\n\n    let targetDetails = targetElementId.split(' ');\n    let targetRank = targetDetails[0];\n    let targetColor = targetDetails[1];\n\n    let isDifferentColors = cardColor != targetColor;\n    if (this.isOfLowRank(cardRank, targetRank)) return isDifferentColors;\n  }\n\n  dropOnWaste(event) {\n    event.preventDefault();\n    const droppableCardId = event.dataTransfer.getData('text');\n    event.target.appendChild(document.getElementById(droppableCardId));\n  }\n\n  drop(event) {\n    event.preventDefault();\n    const droppableCardId = event.dataTransfer.getData('text');\n    let targetElementId = event.target.parentNode.id;\n    if (!this.isValidToDrop(droppableCardId, targetElementId)) return;\n    let elementToPlace = document.getElementById(droppableCardId);\n    let length = targetElementId.split(' ').length;\n    if (length != 3) event.target.appendChild(elementToPlace);\n    else event.target.parentNode.parentNode.appendChild(elementToPlace);\n  }\n\n  isValidToDropOnFoundationPile(event, droppableCardId) {\n    let cardDetails = droppableCardId.split(' ');\n    let cardRank = cardDetails[0];\n    let cardSuit = cardDetails[2];\n    let upperCard = event.target.lastChild;\n    let targetDetails = [];\n    if (upperCard != null) targetDetails = upperCard.id.split(' ');\n    let targetRank = targetDetails[0];\n    let targetSuit = targetDetails[2];\n    if (upperCard == null && cardRank == 1) return true;\n    if (this.isOfHighRank(cardRank, targetRank)) return cardSuit == targetSuit;\n    return false;\n  }\n\n  hasWon() {\n    let foundationCards = this.state.foundationCards;\n    let hasWon = true;\n    let totalCards = Object.values(foundationCards);\n    totalCards.forEach(cards => {\n      if (cards.length != 13) hasWon = false;\n    });\n    if (hasWon) alert('you won this game');\n  }\n\n  dropOnFoundationPiles(event) {\n    const droppableCardId = event.dataTransfer.getData('text');\n    let targetId = event.target.id;\n    if (!this.isValidToDropOnFoundationPile(event, droppableCardId)) return;\n    let card = document.getElementById(droppableCardId);\n    this.state.foundationCards[targetId].push(card);\n    document.getElementById(targetId).appendChild(card);\n    this.hasWon();\n  }\n\n  createFoundation() {\n    return (\n      <div\n        id=\"foundation\"\n        className=\"foundation\"\n        onDragOver={this.allowDrop}\n        onDrop={this.dropOnFoundationPiles}\n      >\n        <div className=\"foundationPiles\" id=\"firstFoundationPile\" />\n        <div className=\"foundationPiles\" id=\"secondFoundationPile\" />\n        <div className=\"foundationPiles\" id=\"thirdFoundationPile\" />\n        <div className=\"foundationPiles\" id=\"fourthFoundationPile\" />\n      </div>\n    );\n  }\n\n  getSymbolAndColor(className) {\n    const symbolAndColors = {\n      spade: { symbol: this.state.spade, color: 'black' },\n      heart: { symbol: this.state.heart, color: 'red' },\n      club: { symbol: this.state.club, color: 'black' },\n      diamond: { symbol: this.state.diamond, color: 'red' }\n    };\n\n    let symbolAndColor = symbolAndColors[className];\n    return { symbol: symbolAndColor.symbol, color: symbolAndColor.color };\n  }\n\n  createSuit(className) {\n    let { symbol, color } = this.getSymbolAndColor(className);\n\n    let king = (\n      <Card symbol={symbol} color={color} rank=\"K\" className={className} />\n    );\n\n    let queen = (\n      <Card symbol={symbol} color={color} rank=\"Q\" className={className} />\n    );\n    let jack = (\n      <Card symbol={symbol} color={color} rank=\"J\" className={className} />\n    );\n\n    for (let i = 1; i <= 10; i++)\n      this.state.deck.push(\n        <Card symbol={symbol} color={color} rank={i} className={className} />\n      );\n\n    this.state.deck.push(jack);\n    this.state.deck.push(queen);\n    this.state.deck.push(king);\n  }\n\n  createDeck() {\n    this.createSuit('spade');\n    this.createSuit('heart');\n    this.createSuit('club');\n    this.createSuit('diamond');\n  }\n\n  putCardsOnStock = function() {\n    let deck = this.state.deck;\n    for (let i = 1; i <= 24; i++) {\n      let index = [Math.floor(Math.random() * deck.length)];\n      this.state.stocksCards.push(deck[index]);\n      deck.splice(index, 1);\n    }\n  };\n\n  getWastesDiv() {\n    return (\n      <div\n        id=\"waste\"\n        className=\"waste\"\n        onDrop={this.dropOnWaste}\n        onDragOver={this.allowDrop}\n      >\n        {this.state.wasteCards}\n      </div>\n    );\n  }\n\n  getStocksDiv() {\n    return (\n      <div id=\"stocks\" className=\"stocks\" onClick={this.PutOnWaste}>\n        {this.state.stocksCards}\n      </div>\n    );\n  }\n\n  getUndoDiv() {\n    return (\n      <div class=\"undo\" onClick={this.putBackOnStocks}>\n        &#x2940;\n      </div>\n    );\n  }\n\n  getUpperLeftDiv() {\n    return (\n      <div id=\"upperDivLeft\" className=\"upperDivLeft\">\n        {this.getStocksDiv()}\n        {this.getUndoDiv()}\n        {this.getWastesDiv()}\n      </div>\n    );\n  }\n\n  getUpperRightDiv() {\n    return (\n      <div id=\"upperDivRight\" className=\"upperDivRight\">\n        {this.createFoundation()}\n      </div>\n    );\n  }\n\n  getUpperDiv() {\n    return (\n      <div id=\"upperDiv\" className=\"upperDiv\">\n        {this.getUpperLeftDiv()}\n        {this.getUpperRightDiv()}\n      </div>\n    );\n  }\n\n  getTablePile(cardsForEachPile) {\n    return (\n      <div\n        className=\"tableauPiles\"\n        onDrop={this.drop}\n        onDragOver={this.allowDrop}\n      >\n        {cardsForEachPile}\n      </div>\n    );\n  }\n\n  createTableauPiles() {\n    let deck = this.state.deck;\n    for (let i = 1; i <= 7; i++) {\n      let cardsForEachPile = new Array();\n      for (let j = 1; j <= i; j++) {\n        let randomIndex = Math.floor(Math.random() * deck.length);\n        let cardToAdd = deck[randomIndex];\n        cardsForEachPile.push(cardToAdd);\n        deck.splice(randomIndex, 1);\n      }\n      let tablePile = this.getTablePile(cardsForEachPile);\n      this.state.tableauPiles.push(tablePile);\n    }\n  }\n\n  getBottomDiv() {\n    return (\n      <div id=\"bottomDiv\" className=\"bottomDiv\">\n        <div id=\"tableau\" className=\"tableau\">\n          {this.state.tableauPiles}\n        </div>\n      </div>\n    );\n  }\n\n  getBoard() {\n    if (\n      this.state.stocksCards.length == 0 ||\n      this.state.tableauPiles.length == 0\n    ) {\n      this.createDeck();\n      this.putCardsOnStock();\n      this.createTableauPiles();\n    }\n    let bottomDiv = this.getBottomDiv();\n    let upperDiv = this.getUpperDiv();\n    return { upperDiv, bottomDiv };\n  }\n\n  render() {\n    let { upperDiv, bottomDiv } = this.getBoard();\n    return (\n      <div id=\"Game-table\">\n        {upperDiv}\n        {bottomDiv}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nexport default class Div extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      className: props.className\n    };\n  }\n\n  render() {\n    return <div className={this.state.className} id={this.state.id} />;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App spade=\"&#9824;\" heart=\"&#9829;\" club=\"&#9827;\" diamond=\"&#9830;\" />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}